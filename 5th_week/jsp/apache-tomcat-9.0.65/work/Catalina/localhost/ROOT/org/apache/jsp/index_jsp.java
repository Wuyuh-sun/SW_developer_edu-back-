/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.65
 * Generated at: 2022-08-22 02:30:52 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import java.util.ArrayList;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

 //전역변수,전역함수
   //ssi.jsp문서는 단독실행가능합니다
   Connection CN; //DB서버연결정보,명령어생성할때 참조 
   Statement ST; //ST=CN.createStatement()
   PreparedStatement PST; //PST=CN.prepareStatment(sql)
   CallableStatement CS; //CS=CN.callableStatement(sql)
   ResultSet RS; //조회한결과를 RS기억  RS.next( )

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/./ssi.jsp", Long.valueOf(1661129325584L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write('\r');
      out.write('\n');

   try{
    Class.forName("oracle.jdbc.driver.OracleDriver");
    String url="jdbc:oracle:thin:@127.0.0.1:1521:XE";
    CN=DriverManager.getConnection(url,"system", "1234");
    System.out.println("1단계: db connect Success");
    }catch(Exception ex){
        out.println("db err");
    }

      out.write('\r');
      out.write('\n');

    String loginUserEmail = (String)session.getAttribute("loginEmail");
    String sqlQuery;

    String email;
    String pw;
    String name;
    String profileimg ;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"./CSS/index.css\">\r\n");
      out.write("    <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@48,400,0,0\" />\r\n");
      out.write("    <title>Yunha's BBS</title>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("    <div class=\"circle\">\r\n");
      out.write("        <div class=\"loadingArea\">\r\n");
      out.write("            <h1 class=\"page-header\">Yunha's BBS</h1>\r\n");
      out.write("            <div class=\"sheep\"></div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"loginArea\">\r\n");
      out.write("            ");

            sqlQuery = "select * from yunBbsUser where email =?";
            PST=CN.prepareStatement(sqlQuery);
            PST.setString(1, loginUserEmail);
            RS=PST.executeQuery();
            
      out.write("\r\n");
      out.write("            \r\n");
      out.write("            ");
if(session.getAttribute("loginEmail") != null){
      out.write("\r\n");
      out.write("            ");
while(RS.next()){
      out.write("\r\n");
      out.write("            ");
      out.write("\r\n");
      out.write("            <div class=\"flip-card\">\r\n");
      out.write("                <div class=\"flip-card-inner\">\r\n");
      out.write("                    <div class=\"flip-card-front\">\r\n");
      out.write("                        <img src=\"./storage/");
      out.print(RS.getString("profileimg"));
      out.write("\">\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"flip-card-back\">\r\n");
      out.write("                        <div>Email</div>\r\n");
      out.write("                        <div>");
      out.print(RS.getString("email"));
      out.write("</div> \r\n");
      out.write("                        <div>Name</div>\r\n");
      out.write("                        <div>");
      out.print(RS.getString("name"));
      out.write("</div> \r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"navBox\">\r\n");
      out.write("                <a class=\"userBox\">\r\n");
      out.write("                    <span class=\"material-symbols-outlined\">account_circle</span>\r\n");
      out.write("                    <br>\r\n");
      out.write("                    <small>내 정보</small>\r\n");
      out.write("                </a>\r\n");
      out.write("                <div class=\"logoutBox\" onclick=\"logout(event)\">\r\n");
      out.write("                    <span class=\"material-icons\">power_settings_new</span>\r\n");
      out.write("                    <br>\r\n");
      out.write("                    <small>로그아웃</small>\r\n");
      out.write("                </div>\r\n");
      out.write("                <a href=\"./BBS/bbs_main.jsp\" class=\"bbsBox\">\r\n");
      out.write("                    <span class=\"material-symbols-outlined\">edit_square</span>\r\n");
      out.write("                    <br>\r\n");
      out.write("                    <small>게시판</small>\r\n");
      out.write("                </a>\r\n");
      out.write("            </div>\r\n");
      out.write("            \r\n");
      out.write("            ");
}
      out.write("\r\n");
      out.write("            <script>\r\n");
      out.write("                window.addEventListener(\"load\",()=>{\r\n");
      out.write("                    document.querySelector(\".loginForm\").style.display = \"none\";\r\n");
      out.write("                    document.querySelector(\".signUpGrp\").style.display = \"none\";\r\n");
      out.write("                })\r\n");
      out.write("                function logout(e){\r\n");
      out.write("                    fetch('./logout.jsp', {\r\n");
      out.write("                    }).then((res)=>{\r\n");
      out.write("                        location.reload();\r\n");
      out.write("                    });\r\n");
      out.write("                }\r\n");
      out.write("            </script>\r\n");
      out.write("            ");
}
      out.write("\r\n");
      out.write("\r\n");
      out.write("            <form action=\".login.jsp\" class=\"loginForm\" method=\"post\">\r\n");
      out.write("                <label for=\"email\">E-MAIL</label>\r\n");
      out.write("                <br>\r\n");
      out.write("                <input type=\"email\" name=\"email\" id=\"email\" placeholder=\"e-mail을 입력하세요\" autocomplete=\"off\" required>\r\n");
      out.write("                <br>\r\n");
      out.write("                <label for=\"password\">PASSWORD</label>\r\n");
      out.write("                <br>\r\n");
      out.write("                <input type=\"password\" name=\"password\" id=\"password\" placeholder=\"password을 입력하세요\" required>\r\n");
      out.write("                <br>\r\n");
      out.write("                <input type=\"submit\" value=\"LOG-IN\" onclick=\"login(event)\">\r\n");
      out.write("                <hr>\r\n");
      out.write("            </form>\r\n");
      out.write("            <div class=\"signUpGrp\">\r\n");
      out.write("                <small>회원가입이 안되어있나요?</small>\r\n");
      out.write("                <br>\r\n");
      out.write("                <button class=\"signUpBtn\">SIGN-UP</button>\r\n");
      out.write("                <a href=\"./BBS/bbs_main.jsp\"><small>로그인하지 않고 게시판 보기</small></a>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"loadingBar\"></div>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"area\">\r\n");
      out.write("        <ul class=\"circles\">\r\n");
      out.write("            <li></li>\r\n");
      out.write("            <li></li>\r\n");
      out.write("            <li></li>\r\n");
      out.write("            <li></li>\r\n");
      out.write("            <li></li>\r\n");
      out.write("            <li></li>\r\n");
      out.write("            <li></li>\r\n");
      out.write("            <li></li>\r\n");
      out.write("            <li></li>\r\n");
      out.write("            <li></li>\r\n");
      out.write("        </ul>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"signUpPath\">\r\n");
      out.write("        <div class=\"signUpForm\">\r\n");
      out.write("            <div class=\"signUpCloseBtn\">X</div>\r\n");
      out.write("            <div class=\"elementCenter\">\r\n");
      out.write("                <div class=\"signTitle\">회원가입</div>\r\n");
      out.write("                <form action=\"\" class=\"signUpFormTag\">\r\n");
      out.write("                    <label for=\"signUpEmail\">EMAIL</label>\r\n");
      out.write("                    <input type=\"button\" class=\"emailCheck\" value=\"중복체크\" onclick=\"emailCheck(this)\">\r\n");
      out.write("                    <br>\r\n");
      out.write("                    <input type=\"email\" name=\"signUpEmail\" id=\"signUpEmail\" placeholder=\"EMAIL입력 후 중복체크를 해주세요(필수)\" onkeyup=\"emailChange()\" required>\r\n");
      out.write("                    <br>\r\n");
      out.write("                    <small class=\"errMsg1\">※중복되는 Email이 있습니다.</small>\r\n");
      out.write("                    <small class=\"errMsg2\">※Email형식에 맞게 작성해주세요.</small>\r\n");
      out.write("                    <small class=\"errMsg3\">※사용가능한 Email입니다.</small>\r\n");
      out.write("                    <small class=\"errMsg4\">※Email중복체크를 해주세요.</small>\r\n");
      out.write("                    <label for=\"signUpPassword\">PASSWORD</label>\r\n");
      out.write("                    <br>\r\n");
      out.write("                    <input type=\"password\" name=\"signUpPassword\" id=\"signUpPassword\" placeholder=\"가입할 PASSWORD를 입력하세요(필수)\"  maxlength=\"20\" required>\r\n");
      out.write("                    <br>\r\n");
      out.write("                    <label for=\"signUpName\">NAME</label>\r\n");
      out.write("                    <br>\r\n");
      out.write("                    <input type=\"text\" name=\"signUpName\" id=\"signUpName\" placeholder=\"가입할 NAME을 입력하세요(필수)\" maxlength=\"10\" required>\r\n");
      out.write("                    <br>\r\n");
      out.write("                    <label for=\"\">PROFILE</label>\r\n");
      out.write("                    <br>\r\n");
      out.write("                    <div class=\"profileBorder\"></div>\r\n");
      out.write("                    <div class=\"profileImgView\">\r\n");
      out.write("                        <img src=\"\" id=\"Img\">\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <br>\r\n");
      out.write("                    <input type=\"file\" name=\"signUpProfileFile\" class=\"signUpProfileFile\">\r\n");
      out.write("                    <input type=\"submit\" class=\"signUpSubmit\" value=\"가입\" onclick=\"signUpCheck(event)\">\r\n");
      out.write("                </form>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    <script>\r\n");
      out.write("        const loadingArea = document.querySelector(\".loadingArea\");\r\n");
      out.write("        const loginArea = document.querySelector(\".loginArea\");\r\n");
      out.write("        const loadingBar = document.querySelector(\".loadingBar\");\r\n");
      out.write("        const signUpBtn = document.querySelector(\".signUpBtn\");\r\n");
      out.write("        const signUpPath = document.querySelector(\".signUpPath\");\r\n");
      out.write("        const signUpForm = document.querySelector(\".signUpForm\");\r\n");
      out.write("        const signUpCloseBtn = document.querySelector(\".signUpCloseBtn\");\r\n");
      out.write("        const file = document.querySelector(\".signUpProfileFile\");\r\n");
      out.write("        const img = document.getElementById(\"Img\");\r\n");
      out.write("\r\n");
      out.write("        let emailValue = document.getElementById(\"signUpEmail\");\r\n");
      out.write("        let passwordValue = document.getElementById(\"signUpPassword\");\r\n");
      out.write("        let nameValue = document.getElementById(\"signUpName\");\r\n");
      out.write("\r\n");
      out.write("        let result = null;\r\n");
      out.write("\r\n");
      out.write("        loadingArea.style.left = \"0%\";\r\n");
      out.write("        loginArea.style.left = \"100%\";\r\n");
      out.write("\r\n");
      out.write("        signUpPath.style.display = \"none\";\r\n");
      out.write("        signUpForm.style.top = \"150%\";\r\n");
      out.write("        // signUpPath.style.display = \"block\";\r\n");
      out.write("        // signUpForm.style.top = \"50%\";\r\n");
      out.write("\r\n");
      out.write("        window.addEventListener(\"load\", () => {\r\n");
      out.write("            setTimeout(() => {\r\n");
      out.write("                loadingArea.style.left = \"-103%\";\r\n");
      out.write("                loginArea.style.left = \"0%\";\r\n");
      out.write("                loadingBar.style.animation = \"none\";\r\n");
      out.write("                loadingBar.style.background = \"skyblue\";\r\n");
      out.write("                loadingBar.style.transform = \"translate(-50%, -50%)\";\r\n");
      out.write("            }, 3000)\r\n");
      out.write("            setTimeout(() => {\r\n");
      out.write("                loginArea.style.borderRadius = \"50%\";\r\n");
      out.write("            }, 4000)\r\n");
      out.write("        })\r\n");
      out.write("        signUpBtn.addEventListener(\"click\", () => {\r\n");
      out.write("            signUpPath.style.display = \"block\";\r\n");
      out.write("            setTimeout(() => {\r\n");
      out.write("                signUpForm.style.top = \"50%\";\r\n");
      out.write("            }, 100)\r\n");
      out.write("        })\r\n");
      out.write("        signUpCloseBtn.addEventListener(\"click\", () => {\r\n");
      out.write("            signUpForm.style.top = \"150%\";\r\n");
      out.write("            setTimeout(() => {\r\n");
      out.write("                signUpPath.style.display = \"none\";\r\n");
      out.write("            }, 1500)\r\n");
      out.write("        })\r\n");
      out.write("\r\n");
      out.write("        function readImage(input) {\r\n");
      out.write("            // 인풋 태그에 파일이 있는 경우\r\n");
      out.write("            if(input.files && input.files[0]) {\r\n");
      out.write("\r\n");
      out.write("                // 이미지 파일인지 검사 (생략)\r\n");
      out.write("\r\n");
      out.write("                // FileReader 인스턴스 생성\r\n");
      out.write("                const reader = new FileReader()\r\n");
      out.write("\r\n");
      out.write("                // 이미지가 로드가 된 경우\r\n");
      out.write("                reader.onload = e => {\r\n");
      out.write("                    img.src = e.target.result;\r\n");
      out.write("                }\r\n");
      out.write("\r\n");
      out.write("                // reader가 이미지 읽도록 하기\r\n");
      out.write("                reader.readAsDataURL(input.files[0])\r\n");
      out.write("                }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        if(file.value == \"\"){\r\n");
      out.write("            img.src = \"./IMG/profile.png\";\r\n");
      out.write("        }\r\n");
      out.write("        file.addEventListener(\"change\",(e)=>{\r\n");
      out.write("            readImage(e.target);\r\n");
      out.write("        })\r\n");
      out.write("        \r\n");
      out.write("\r\n");
      out.write("        function errMsg(err1, err2, err3, err4){\r\n");
      out.write("            document.querySelector(\".errMsg1\").style.display = err1;\r\n");
      out.write("            document.querySelector(\".errMsg2\").style.display = err2;\r\n");
      out.write("            document.querySelector(\".errMsg3\").style.display = err3;\r\n");
      out.write("            document.querySelector(\".errMsg4\").style.display = err4;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function emailCheck(e) {\r\n");
      out.write("            if(emailValue.value != \"\"){\r\n");
      out.write("                if(emailValue.validationMessage != \"\"){\r\n");
      out.write("                    errMsg(\"none\", \"block\", \"none\", \"none\");\r\n");
      out.write("                    emailValue.focus();\r\n");
      out.write("                    return false;\r\n");
      out.write("                }else{\r\n");
      out.write("                    errMsg(\"none\", \"none\", \"none\", \"none\");\r\n");
      out.write("                    fetch('./EmailCheck.jsp', {\r\n");
      out.write("                    method: 'POST',\r\n");
      out.write("                    cache: 'no-cache',\r\n");
      out.write("                    headers: {\r\n");
      out.write("                        'Content-Type': 'application/x-www-form-urlencoded',\r\n");
      out.write("                    },\r\n");
      out.write("                    body: \"email=\"+emailValue.value\r\n");
      out.write("                    })\r\n");
      out.write("                    .then((res)=>{\r\n");
      out.write("                        res.text().then((data)=>{\r\n");
      out.write("                            result = data.replace(/(\\s*)/g, \"\");\r\n");
      out.write("                            console.log(result);\r\n");
      out.write("                            if(result == 'true'){\r\n");
      out.write("                                errMsg(\"block\", \"none\", \"none\", \"none\");\r\n");
      out.write("                                emailValue.focus();\r\n");
      out.write("                                return false;\r\n");
      out.write("                            } else{\r\n");
      out.write("                                errMsg(\"none\", \"none\", \"block\", \"none\");\r\n");
      out.write("                                emailValue.focus();\r\n");
      out.write("                                return false;\r\n");
      out.write("                            }\r\n");
      out.write("                        })\r\n");
      out.write("                    })\r\n");
      out.write("                }\r\n");
      out.write("            } else{\r\n");
      out.write("                errMsg(\"none\", \"block\", \"none\", \"none\");\r\n");
      out.write("                emailValue.focus();\r\n");
      out.write("                return false;\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function emailChange(){\r\n");
      out.write("            result = 'true';\r\n");
      out.write("            errMsg(\"none\", \"none\", \"none\", \"block\");\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function signUpCheck(e){\r\n");
      out.write("            if(result == 'false' && passwordValue.value != \"\" && nameValue.value != \"\"){\r\n");
      out.write("                e.preventDefault();\r\n");
      out.write("\r\n");
      out.write("                const fileInput = document.querySelector('.signUpProfileFile');\r\n");
      out.write("                const formData = new FormData();\r\n");
      out.write("\r\n");
      out.write("                formData.append('signUpEmail', emailValue.value);\r\n");
      out.write("                formData.append('signUpPassword', passwordValue.value);\r\n");
      out.write("                formData.append('signUpName', nameValue.value);\r\n");
      out.write("                formData.append('signUpProfileFile', fileInput.files[0]);\r\n");
      out.write("                \r\n");
      out.write("                fetch('./signUpProfileSave.jsp', {\r\n");
      out.write("                    method: 'POST',\r\n");
      out.write("                    headers:{},\r\n");
      out.write("                    body:formData\r\n");
      out.write("                }).then((res)=>{\r\n");
      out.write("                    res.text().then((data)=>{\r\n");
      out.write("                        location.href=\"./middleLogin.jsp\";\r\n");
      out.write("                    })\r\n");
      out.write("                });\r\n");
      out.write("            } else{\r\n");
      out.write("                e.preventDefault();\r\n");
      out.write("                alert(\"가입 형식에 맞게 작성해주세요\");\r\n");
      out.write("                console.dir(file);\r\n");
      out.write("                return false;\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        function login(e){\r\n");
      out.write("            const email = document.getElementById(\"email\");\r\n");
      out.write("            const password = document.getElementById(\"password\");\r\n");
      out.write("            if(email.value != \"\" && password.value != \"\"){\r\n");
      out.write("                e.preventDefault();\r\n");
      out.write("\r\n");
      out.write("                const loginData = new FormData();\r\n");
      out.write("\r\n");
      out.write("                loginData.append('loginEmail', email.value);\r\n");
      out.write("                loginData.append('loginPassword', password.value);\r\n");
      out.write("\r\n");
      out.write("                fetch('./login.jsp', {\r\n");
      out.write("                    method: 'POST',\r\n");
      out.write("                    headers:{},\r\n");
      out.write("                    body:loginData\r\n");
      out.write("                }).then((res)=>{\r\n");
      out.write("                    res.text().then((data)=>{\r\n");
      out.write("                        result = data.replace(/(\\s*)/g, \"\");\r\n");
      out.write("                        console.log(result);\r\n");
      out.write("                        if(result == 'true'){\r\n");
      out.write("                            alert(\"로그인 성공\");\r\n");
      out.write("                            location.href=\"./middleLogin2.jsp\";\r\n");
      out.write("                        } else{\r\n");
      out.write("                            alert(\"로그인 실패\");\r\n");
      out.write("                        }\r\n");
      out.write("                    })\r\n");
      out.write("                });\r\n");
      out.write("            } else{\r\n");
      out.write("                e.preventDefault();\r\n");
      out.write("                alert(\"로그인에 실패하였습니다.\");\r\n");
      out.write("                return false;\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("    </script>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
